name: Prod Workflow for building, publishing to Github Registry and create Release

on:
  push:
    branches:
      - main

env:
  GH_VERSION: ${{github.sha}}
  REGISTRY_NAME: ghcr.io
  REGISTRY_USER: ${{github.repository_owner}}
  REGISTRY_PASSWORD: ${{secrets.G_TOKEN}}
  IMAGE_NAME: oves-bot-alt-dev
  VERSION_NUMBER: ${{github.run_number}}
  BRANCH_NAME: main

jobs:
  build-and-publish:
    permissions:
      id-token: write
      contents: write
      security-events: write
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Extract metadata (tags and labels) from Docker
        id: metadata
        uses: docker/metadata-action@v5
        with:
          labels: ${{env.IMAGE_NAME}}
          images: ${{env.REGISTRY_NAME}}/${{env.REGISTRY_USER}}/${{env.IMAGE_NAME}}
          tags: ${{env.GH_VERSION}}
      - name: Login to Github container registry
        uses: docker/login-action@v3
        with:
          registry: ${{env.REGISTRY_NAME}}
          username: ${{env.REGISTRY_USER}}
          password: ${{env.REGISTRY_PASSWORD}}
      - name: Build and Push to Registry
        id: push
        uses: docker/build-push-action@v6
        with:
          push: 'true'
          context: .
          file: ./docker/Dockerfile
          tags: |
            ${{env.REGISTRY_NAME}}/${{env.REGISTRY_USER}}/${{env.IMAGE_NAME}}:latest
            ${{env.REGISTRY_NAME}}/${{env.REGISTRY_USER}}/${{env.IMAGE_NAME}}:${{env.GH_VERSION}}
          labels: ${{steps.metadata.outputs.labels}}
          platforms: linux/amd64
          outputs: type=image,name=target,annotation-index.org.opencontainers.image.description=OVES Bot Alternative
      - name: Output Image name
        run: |
          echo "Image pushed to ${{env.REGISTRY_NAME}}/${{env.REGISTRY_USER}}/${{env.IMAGE_NAME}}:${{env.GH_VERSION}}"
  

  create-release:
    runs-on: ubuntu-latest
    needs: build-and-publish
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{env.VERSION_NUMBER}}-prod"
          name: "Release v${{env.VERSION_NUMBER}}"
          body: |
            # Release Notes
            This is the release of ${{env.RELEASE_NAME}} with version v${{env.VERSION_NUMBER}}.
            The image was pushed to ${{env.REGISTRY_NAME}}/${{env.REGISTRY_USER}}/${{env.IMAGE_NAME}}:${{env.GH_VERSION}}
            The release was done successfully.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{env.REGISTRY_PASSWORD}}
      - name: Output Results
        run: |
          echo "The Prod Release of OVES Bot Alternative was done successfully."

  update-manifest:
    runs-on: ubuntu-latest
    needs: [ create-release ]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          repository: ovesorg/deployment-charts
          ref: ${{env.BRANCH_NAME}}
          token: ${{env.REGISTRY_PASSWORD}}
      - name: Setup Git Config
        uses: fregante/setup-git-user@v2
      - name: Check values.yaml content
        run: cat oves-bot-alt/values.yaml
      - name: Update tag in values.yaml
        run: |
          echo ${{env.VERSION_NUMBER}}
          sed -i "/^[[:space:]]*tag:/c\  tag: ${{env.GH_VERSION}}" oves-bot-alt/values.yaml
      - name: Check for changes
        run: |
          if ! git diff --quiet; then
            git add -A
            git commit -m "Updated image to ${{env.GH_VERSION}}"
            echo ${{github}}
            git push origin ${{env.BRANCH_NAME}}
          else
            echo "No changes to commit."
          fi